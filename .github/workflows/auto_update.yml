name: Auto Update Orbital Data

permissions:
  contents: write  # allow pushing commits and creating releases

on:
  schedule:
    - cron: "0 */12 * * *"  # Runs every 12 hours
  workflow_dispatch:  # Allow manual trigger

concurrency:
  group: update-orbital-data
  cancel-in-progress: true  # prevents overlapping runs

jobs:
  update:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Run data update script
        env:
          SPACETRACK_USERNAME: ${{ secrets.SPACETRACK_USERNAME }}
          SPACETRACK_PASSWORD: ${{ secrets.SPACETRACK_PASSWORD }}
        run: python spacetrack_fetch.py

      - name: Clean up old orbital data (keep latest 3)
        run: |
          echo "Cleaning old raw orbital files..."
          cd data/raw
          ls -t | tail -n +4 | xargs -r rm --  # keep latest 3 files
          echo "Remaining files:"
          ls -lh

      - name: Commit and push updates
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          git add data/latest/*.xlsx || true
          git add data/raw/*.xlsx || true
          git add data/latest/*.json || true
          git add data/raw/*.json || true

          git commit -m "Automated orbital data update [skip ci]" || echo "No changes to commit"
          git pull --rebase origin main
          git push origin main

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "orbital-update-${{ github.run_id }}"
          name: "Automated Orbital Update - ${{ github.run_id }}"
          body: "Latest orbital data update with ML-ready JSON and XLSX files."
          draft: false
          prerelease: false
          files: |
            data/latest/*.json
            data/latest/*.xlsx
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
